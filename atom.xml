<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenYiQiao&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-14T06:32:30.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chenyiqiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript The Ambiguous Part</title>
    <link href="http://yoursite.com/2016/06/14/js-the-ambiguous-part/"/>
    <id>http://yoursite.com/2016/06/14/js-the-ambiguous-part/</id>
    <published>2016-06-14T06:02:16.000Z</published>
    <updated>2016-06-14T06:32:30.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;HTML中的-attribute-和-property&quot;&gt;&lt;a href=&quot;#HTML中的-attribute-和-property&quot; class=&quot;headerlink&quot; title=&quot;HTML中的 attribute 和 property&quot;&gt;&lt;/a&gt;HTML中的 attribute 和 property&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;attribute 和 property 是经常被混淆的两个概念。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;my-el&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简单来说，JS 代码里面访问相应元素的 property 是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementByTagName(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而访问 attribute 的方式是通过&lt;code&gt;getAttribute&lt;/code&gt;和&lt;code&gt;setAttribute&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementByTagName(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;区别&quot;&gt;&lt;a href=&quot;#区别&quot; class=&quot;headerlink&quot; title=&quot;区别&quot;&gt;&lt;/a&gt;区别&lt;/h2&gt;&lt;p&gt;很多情况下，这二者是相互映射的，就是说 attribute 反射了同名的 property。但是另外的情况也不少。&lt;/p&gt;
&lt;h3 id=&quot;名字不一致&quot;&gt;&lt;a href=&quot;#名字不一致&quot; class=&quot;headerlink&quot; title=&quot;名字不一致&quot;&gt;&lt;/a&gt;名字不一致&lt;/h3&gt;&lt;p&gt;最典型的是 className，为了回避 JavaScript 的保留字，跟 class attribute 对应的 property 是 className。&lt;/p&gt;
&lt;h3 id=&quot;类型不一致&quot;&gt;&lt;a href=&quot;#类型不一致&quot; class=&quot;headerlink&quot; title=&quot;类型不一致&quot;&gt;&lt;/a&gt;类型不一致&lt;/h3&gt;&lt;p&gt;最典型的是 style，不接受字符串类型赋值。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cls1 cls2&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;color:blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; div = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementByTagName(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  div.style &lt;span class=&quot;comment&quot;&gt;// 对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;语义不一致&quot;&gt;&lt;a href=&quot;#语义不一致&quot; class=&quot;headerlink&quot; title=&quot;语义不一致&quot;&gt;&lt;/a&gt;语义不一致&lt;/h3&gt;&lt;p&gt;如 a 元素的 href 属性。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;m.taobao.com&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.href &lt;span class=&quot;comment&quot;&gt;// &quot;http://m.taobao.com&quot;，经过 resolve 的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;href&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// &quot;m.taobao.com&quot;，跟 HTML 代码中完全一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;保持单向关系&quot;&gt;&lt;a href=&quot;#保持单向关系&quot; class=&quot;headerlink&quot; title=&quot;保持单向关系&quot;&gt;&lt;/a&gt;保持单向关系&lt;/h3&gt;&lt;p&gt;value 是个特殊的 attribute/property。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cute&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; input = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementByTagName(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 如果 property 没有设置，那么结果是 attribute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input.value &lt;span class=&quot;comment&quot;&gt;// cute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// cute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input.value = &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input.value &lt;span class=&quot;comment&quot;&gt;// hello&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// cute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除此之外，checkbox 的显示状态也有一些关系。&lt;/p&gt;
&lt;h2 id=&quot;特殊场景&quot;&gt;&lt;a href=&quot;#特殊场景&quot; class=&quot;headerlink&quot; title=&quot;特殊场景&quot;&gt;&lt;/a&gt;特殊场景&lt;/h2&gt;&lt;h3 id=&quot;mutation&quot;&gt;&lt;a href=&quot;#mutation&quot; class=&quot;headerlink&quot; title=&quot;mutation&quot;&gt;&lt;/a&gt;mutation&lt;/h3&gt;&lt;p&gt;使用 mutation observer，只能监测到 attribute 的变化。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MutationObserver(mutations = &amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mutations.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mutation = mutations[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(mutation.attributeName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;observer.observe(element, &amp;#123;attribute: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;element.prop1 = &lt;span class=&quot;string&quot;&gt;&#39;aa&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 不会触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;element.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;attr1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;aa&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 会触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;custom-element&quot;&gt;&lt;a href=&quot;#custom-element&quot; class=&quot;headerlink&quot; title=&quot;custom element&quot;&gt;&lt;/a&gt;custom element&lt;/h3&gt;&lt;p&gt;在使用 Web Component 的时候，可以定义 attribute 和 property，两者可以互相反射，也可以全无关联。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myElementProto = Obejct.create(HTMLElment.prototype, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  createdCallback: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义 property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(myElementProto, &lt;span class=&quot;string&quot;&gt;&#39;prop1&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  set: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;property change&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义 attribute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myElementProto.attributeChangedCallback = fucntion (attr, oldVal, newVal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (attr === &lt;span class=&quot;string&quot;&gt;&#39;attr1&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;attribute change&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.myElement = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.registerElement(&lt;span class=&quot;string&quot;&gt;&#39;my-element&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  prototype: myElementProto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://github.com/wintercn/blog/issues/7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;winter 的 issue blog&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTML中的-attribute-和-property&quot;&gt;&lt;a href=&quot;#HTML中的-attribute-和-property&quot; class=&quot;headerlink&quot; title=&quot;HTML中的 attribute 和 property&quot;&gt;&lt;/a&gt;HTML中
    
    </summary>
    
    
      <category term="ECMAScript" scheme="http://yoursite.com/tags/ECMAScript/"/>
    
  </entry>
  
  <entry>
    <title>NPM 依赖解析</title>
    <link href="http://yoursite.com/2016/06/03/npm-dep-resolution/"/>
    <id>http://yoursite.com/2016/06/03/npm-dep-resolution/</id>
    <published>2016-06-03T04:39:57.000Z</published>
    <updated>2016-06-12T08:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;npm v2 | v3 依赖解析的区别，以及对 node_modules 文件夹带来的影响。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;npm-v2-的依赖解析&quot;&gt;&lt;a href=&quot;#npm-v2-的依赖解析&quot; class=&quot;headerlink&quot; title=&quot;npm v2 的依赖解析&quot;&gt;&lt;/a&gt;npm v2 的依赖解析&lt;/h2&gt;&lt;p&gt;假设现在有三个模块：A、B 和 C。分别用 mod-a@1，mod-b@1，mod-c@1 来表示它们。mod-a@1 依赖 mod-b@1，而 mod-c@1 依赖 mod-b@2。化成图就是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在创建一个同时依赖 mod-a@1 和 mod-c@1 的应用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/2.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;依赖地狱&quot;&gt;&lt;a href=&quot;#依赖地狱&quot; class=&quot;headerlink&quot; title=&quot;依赖地狱&quot;&gt;&lt;/a&gt;依赖地狱&lt;/h3&gt;&lt;p&gt;在Node.js 之前的 runtime，一个包管理器需要提供 mod-b 的某一个版本，这就是依赖地狱：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/3.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;而 npm 把 mod-b 的两个版本都放到依赖树里面，分别在依赖它们的模块之下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/4.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;在终端里面是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/5.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;你也可以用&lt;code&gt;npm ls&lt;/code&gt;列出所有的依赖，并且清楚地看到它们之间的依赖关系：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/6.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果只想看到主依赖，可以用&lt;code&gt;npm ls --depth=0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/7.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;npm-和-Node-js-模块加载器&quot;&gt;&lt;a href=&quot;#npm-和-Node-js-模块加载器&quot; class=&quot;headerlink&quot; title=&quot;npm 和 Node.js 模块加载器&quot;&gt;&lt;/a&gt;npm 和 Node.js 模块加载器&lt;/h3&gt;&lt;p&gt;然而，npm 光做到这一点是不够的。尽快嵌套的位置可以允许不同版本的统一模块的同时存在，但是大多数模块加载器不能把相同模块的不同版本加载到内存里。还好，Node.js 的模块加载器特别为这个问题做了处理，以至于同一个模块的不同版本之间不会发生冲突。&lt;/p&gt;
&lt;h2 id=&quot;npm-v3-的依赖解析&quot;&gt;&lt;a href=&quot;#npm-v3-的依赖解析&quot; class=&quot;headerlink&quot; title=&quot;npm v3 的依赖解析&quot;&gt;&lt;/a&gt;npm v3 的依赖解析&lt;/h2&gt;&lt;p&gt;npm3 解析依赖的方式和 npm2 有所不同。&lt;/p&gt;
&lt;p&gt;前面提到了，npm2 处理的方式是把依赖处理成嵌套的形式。npm3 则试图压平依赖树，减少嵌套带来的冗余。为达到这个目的，npm3 把二级依赖提升到顶层。&lt;/p&gt;
&lt;p&gt;所以 3 和 2 的主要不同在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录结构不再反映依赖的层级&lt;/li&gt;
&lt;li&gt;依赖安装的顺序会影响 node_modules 的目录结构&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;举个例子&quot;&gt;&lt;a href=&quot;#举个例子&quot; class=&quot;headerlink&quot; title=&quot;举个例子&quot;&gt;&lt;/a&gt;举个例子&lt;/h3&gt;&lt;p&gt;比方说有个 mod-a@1,它依赖 mod-b@1。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/8.png&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在创建一个依赖 mod-a@1 的应用。&lt;code&gt;npm install&lt;/code&gt;之后，npm v3 会把 mod-a@1 和 mod-b@1 安装到同一个层级，也就是都在 node_modules 下。npm v2 会把 mod-a@1 和 mod-b@1 以嵌套的形式安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/9.png&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在，应用需要依赖 mod-c@1，mod-c@1 又依赖 mod-b@2。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/10.png&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是在顶层已经安装过 mod-b@1 了，也就不能再在同一级安装 mod-b@2。在这种情况下，npm3 只能把 mod-b@2 嵌套在 mod-c@1 之下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/11.png&quot; alt=&quot;11&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;npm-v3-解析带来的重复及其去重&quot;&gt;&lt;a href=&quot;#npm-v3-解析带来的重复及其去重&quot; class=&quot;headerlink&quot; title=&quot;npm v3 解析带来的重复及其去重&quot;&gt;&lt;/a&gt;npm v3 解析带来的重复及其去重&lt;/h2&gt;&lt;p&gt;继续刚才的例子。目前应用依赖两个模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mod-a@1,依赖 mod-b@1&lt;/li&gt;
&lt;li&gt;mod-c@1,依赖 mod-b@2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/12.png&quot; alt=&quot;12&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在再看，如果还需要依赖一个依赖 mod-b@1 或者 mod-b@2 的模块，该怎么办？&lt;/p&gt;
&lt;h3 id=&quot;例子&quot;&gt;&lt;a href=&quot;#例子&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;假设还需要一个 mod-d@1，它 和 mod-c@1 一样，都依赖 mod-b@2。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/13.png&quot; alt=&quot;13&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为 mod-b@1 已经在顶层了，只能把 mod-b@2 安装在 mod-d@1 之下。这时候会发现，实际上我们已经安装过一次 mod-b@2 了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/14.png&quot; alt=&quot;14&quot;&gt;&lt;/p&gt;
&lt;p&gt;抽象来说，任何一个没有被安装在顶层依赖树，且被超过两个模块依赖的次级依赖，最后都会在多个嵌套里重复出现。&lt;/p&gt;
&lt;p&gt;当然，上面的例子里 mod-b@2 不得不在次级依赖里嵌套的原因是，顶层依赖已经有 mod-b@1 了。假设没有的话，那就可以把 mod-b@2 抽出来作为顶层依赖。这样一来，显然就不会有重复了。&lt;/p&gt;
&lt;p&gt;比方说，我们的应用现在依赖 mod-e@1，它依赖 mod-b@1。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/15.png&quot; alt=&quot;15&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为 mod-b@1 已经在顶层依赖里的，所以，我们不必在 mod-e@1 之下嵌套安装 mod-b@1 了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/16.png&quot; alt=&quot;16&quot;&gt;&lt;/p&gt;
&lt;p&gt;那如果我们又把 mod-a@1 升级到 mod-a@2，它开始依赖 mod-b@2。那又该怎么办呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/17.png&quot; alt=&quot;17&quot;&gt;&lt;/p&gt;
&lt;p&gt;记住一个要点，那就是安装的顺序很重要。&lt;/p&gt;
&lt;p&gt;我们在运行&lt;code&gt;npm install mod-a@2 --save&lt;/code&gt;命令的时候，会发生以下这些事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移除 mod-a@1&lt;/li&gt;
&lt;li&gt;安装 mod-a@2&lt;/li&gt;
&lt;li&gt;把 mod-b@1 留在顶层，因为 mod-e@1 还在依赖它&lt;/li&gt;
&lt;li&gt;在 mod-a@2 之下嵌套安装 mod-b@2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/18.png&quot; alt=&quot;18&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后，把 mod-e@1 更新到 mod-e@2，而 mod-e@2 依赖于 mod-b@2。这时候 npm3 会做以下这些事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移除 mod-e@1&lt;/li&gt;
&lt;li&gt;安装 mod-e@2&lt;/li&gt;
&lt;li&gt;移除 mod-b@1,因为已经没有模块在依赖它了&lt;/li&gt;
&lt;li&gt;把 mod-b@2 移动到顶层，因为原来在顶层的 mod-b@1 已经不在了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/19.png&quot; alt=&quot;19&quot;&gt;&lt;/p&gt;
&lt;p&gt;很明显，这样出现了很多重复，几乎在每个目录下都有 mod-b@2。要去重，运行&lt;code&gt;npm dedupe&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;这个命令把所有嵌套的 mod-b@2 去掉，转而指向顶层的 mod-b@2。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/20.png&quot; alt=&quot;20&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;npm3-的不确定性&quot;&gt;&lt;a href=&quot;#npm3-的不确定性&quot; class=&quot;headerlink&quot; title=&quot;npm3 的不确定性&quot;&gt;&lt;/a&gt;npm3 的不确定性&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;之前提到过，node_modules 这个文件夹的结构和安装顺序是有关系的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你的开发团队正常地用 package.json 来描述应用本身及其依赖，然后用 npm install 来安装模块。很可能会出现一个奇怪的情况，那就是你本地的 node-modules 文件夹和你的搭档的 node-modules 文件夹的结构并不一样。甚至你的测试，开发，生产服务器的 node_modules 结构都不一样。&lt;/p&gt;
&lt;p&gt;简单说，这种情况地出现是由 npm3 安装依赖时的不确定性导致的。&lt;/p&gt;
&lt;p&gt;看到这里你可能不太明白，不过这一节我们会详细讨论为什么会这样，以及怎样确保生成一个可靠的 node_modules 文件夹。&lt;/p&gt;
&lt;h3 id=&quot;让我们回到之前的一个例子：&quot;&gt;&lt;a href=&quot;#让我们回到之前的一个例子：&quot; class=&quot;headerlink&quot; title=&quot;让我们回到之前的一个例子：&quot;&gt;&lt;/a&gt;让我们回到之前的一个例子：&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/21.png&quot; alt=&quot;21&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个例子里面，我们的应用的 package.json 文件是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;name&amp;quot;: &amp;quot;example3&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;test&amp;quot;: &amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;keywords&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;dependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-a&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-c&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-d&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-e&amp;quot;: &amp;quot;^1.0.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;之后，terminal 里面就是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/22.png&quot; alt=&quot;22&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后呢，团队里的一个开发人员决定把 mod-a@1 升级到 mod-a@2,同时它的依赖也从之前的 mod-b@1 变成了 mod-b@2。&lt;/p&gt;
&lt;p&gt;于是他运行这个命令：&lt;code&gt;npm insatall mod-a@2 --save&lt;/code&gt;,terminal 里输出了这个：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/23.png&quot; alt=&quot;23&quot;&gt;&lt;/p&gt;
&lt;p&gt;而现在，我们的依赖结构变成了这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/24.png&quot; alt=&quot;24&quot;&gt;&lt;/p&gt;
&lt;p&gt;那现在，开发人员完成了这个更新之后，把应用拿到测试服务器，然后在新的 package.json 下运行&lt;code&gt;npm install&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;name&amp;quot;: &amp;quot;example3&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;test&amp;quot;: &amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;keywords&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;dependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-a&amp;quot;: &amp;quot;^2.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-c&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-d&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;mod-e&amp;quot;: &amp;quot;^1.0.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;terminal 这样显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/25.png&quot; alt=&quot;25&quot;&gt;&lt;/p&gt;
&lt;p&gt;画成图就是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/v3-dedupe-pic/26.png&quot; alt=&quot;26&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在的依赖树和之前的完全不一样了，发生了什么？&lt;/p&gt;
&lt;p&gt;你可能注意到了，最开始，我们首先安装的是 mod-a@1,由于它依赖了 mod-b@1,mod-b@1 将会出现在顶层，后来我们通过&lt;code&gt;npm install mod-a@2 --save&lt;/code&gt;来替换 mod-a@1 之后，它依然赖在顶层是因为那时候 mod-e@1 还需要它。所以 mod-a@2 虽然数量众多，我们却不得不把它们都嵌套在相应的依赖之下。&lt;/p&gt;
&lt;p&gt;我们再看看测试服务器那边发生了什么。这边是一个新的工程，还没有依赖树。运行&lt;code&gt;npm install&lt;/code&gt;的话，我们发现，package.json 里的第一项就是 mod-a@2,它首先被安装，自然而然的，它所依赖的 mod-b@2 就到了依赖树的顶层，而 mod-b@1 就嵌套在 mod-e@1 之下了。&lt;/p&gt;
&lt;h3 id=&quot;不同的依赖树会影响到应用的功能吗？&quot;&gt;&lt;a href=&quot;#不同的依赖树会影响到应用的功能吗？&quot; class=&quot;headerlink&quot; title=&quot;不同的依赖树会影响到应用的功能吗？&quot;&gt;&lt;/a&gt;不同的依赖树会影响到应用的功能吗？&lt;/h3&gt;&lt;p&gt;不会，虽然结构不同，但是都会安装到需要的依赖。&lt;/p&gt;
&lt;h3 id=&quot;怎么能保证-node-modules-一致？&quot;&gt;&lt;a href=&quot;#怎么能保证-node-modules-一致？&quot; class=&quot;headerlink&quot; title=&quot;怎么能保证 node_modules 一致？&quot;&gt;&lt;/a&gt;怎么能保证 node_modules 一致？&lt;/h3&gt;&lt;p&gt;不难发现，之前的例子里面导致 &lt;strong&gt;node_modules&lt;/strong&gt; 文件夹不一致的原因就在于 package.json 变了。也就是说，如果每次 package.json 变化的时候，都把已经存在的 node_modules 删掉，再重新安装依赖，那得到的依赖树绝对是一样的了。&lt;/p&gt;
&lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;https://docs.npmjs.com/how-npm-works/npm2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How npm works&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;npm v2 | v3 依赖解析的区别，以及对 node_modules 文件夹带来的影响。&lt;br&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>锤子工作流</title>
    <link href="http://yoursite.com/2016/06/03/tools-md/"/>
    <id>http://yoursite.com/2016/06/03/tools-md/</id>
    <published>2016-06-03T04:39:57.000Z</published>
    <updated>2016-06-12T08:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Sublime text | iTerm | Chrome | Git | More…&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Sublime&quot;&gt;&lt;a href=&quot;#Sublime&quot; class=&quot;headerlink&quot; title=&quot;Sublime&quot;&gt;&lt;/a&gt;Sublime&lt;/h2&gt;&lt;p&gt;最常用的编辑器，在 Mac 下的路径是&lt;code&gt;~/Library/Application\ Support/Sublime\ Text\ 3&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h3&gt;&lt;h4 id=&quot;给任意的操作设置快捷键&quot;&gt;&lt;a href=&quot;#给任意的操作设置快捷键&quot; class=&quot;headerlink&quot; title=&quot;给任意的操作设置快捷键&quot;&gt;&lt;/a&gt;给任意的操作设置快捷键&lt;/h4&gt;&lt;p&gt;Sublime 对单词转换有三个操作：转成大写，转成小写，首字母大写。但奇怪的是前两个都有快捷键，第三个却没有，这一点不能忍。但是默认配置里甚至都没有设置它，要怎么改？&lt;/p&gt;
&lt;p&gt;给「首字母大写」设置快捷键的第一个问题就是，我得知道这个操作的名字叫什么，这样才能修改用户设置的快捷键。打开 console，让它打印出每一个操作的命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sublime.log_commands(True)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点 Edit/Convert Case/Title Case, 然后 console 就会把这个操作打印出来：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title_case&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;知道了名字，那设置起来就好办了：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// User/Default(OSX).sublime-keymap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;super+k&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;super+t&quot;&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&quot;command&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;title_case&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;给创建快捷键本身设置快捷键&quot;&gt;&lt;a href=&quot;#给创建快捷键本身设置快捷键&quot; class=&quot;headerlink&quot; title=&quot;给创建快捷键本身设置快捷键&quot;&gt;&lt;/a&gt;给创建快捷键本身设置快捷键&lt;/h4&gt;&lt;p&gt;既然如此，那干脆把调出 User/Default(OSX).sublime-keymap 这个操作本身也设置一个快捷键好了。点 preference/key binding -user，console 会打印这个操作：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;command: open_file &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;packages&amp;#125;/User/Default ($platform).sublime-keymap&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那就是说这个操作的名字叫做&lt;code&gt;open_file&lt;/code&gt;，参数是后面这些，那去设置一下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;super+k&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;super+s&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;command&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;open_file&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;args&quot;&lt;/span&gt;: &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt;:  &lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;packages&amp;#125;/User/Default ($platform).sublime-keymap&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在要改快捷键就可以用快捷键&lt;code&gt;super+k,super+s&lt;/code&gt;了。然后就可以轻松地哪里想改改哪里了。&lt;/p&gt;
&lt;h4 id=&quot;添加-close-other-快捷键&quot;&gt;&lt;a href=&quot;#添加-close-other-快捷键&quot; class=&quot;headerlink&quot; title=&quot;添加 close_other 快捷键&quot;&gt;&lt;/a&gt;添加 close_other 快捷键&lt;/h4&gt;&lt;p&gt;关闭当前标签用 cmd + w 就行了，所以每个 tab 的关闭键对我都无关紧要了，因为我从来不会用鼠标去点。但是我发现”关闭其他标签”这个动作却没有快捷键。这个动作在默认的快捷键设置里面也没有。所以第一步就是找到这个动作的名字是什么。前面提到了，在 console 敲入：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sublime.log_commands(True)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后点右键点击”Close Other Tabs”，然后就会在 console 里面看到这个动作的名字叫做”close-others-by-index”。但是不幸的是这个操作不能直接设置快捷键。为什么呢？因为这个操作需要当前的 group 和 index 作参数。group 指的是所在的屏(如果没有分屏的话，当前的 group 就是0)，index 指的是当前标签在当前屏的第几位。&lt;/p&gt;
&lt;p&gt;我首先得写个插件： Tools/Developer/New Plugins&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// closeOthers.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sublime, sublime_plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;closeOthersCommand&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sublime_plugin.TextCommand)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, edit)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window = self.view.window()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group_index, view_index = window.get_view_index(self.view)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.run_command(&lt;span class=&quot;string&quot;&gt;&quot;close_others_by_index&quot;&lt;/span&gt;, &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;group&quot;&lt;/span&gt;: group_index, &lt;span class=&quot;string&quot;&gt;&quot;index&quot;&lt;/span&gt;: view_index&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段 python 代码就是获取了 group 和 index 的值，然后把这俩值作参数传给&lt;code&gt;close_others_by_index&lt;/code&gt;这个操作。&lt;/p&gt;
&lt;p&gt;保存好之后，再去自定义快捷键：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;ctrl+w&quot;&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&quot;command&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;close_others&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意这里的 command 必须是&lt;code&gt;close_others&lt;/code&gt;，因为我保存的 python 文件的名字叫做&lt;code&gt;closeOthers.py&lt;/code&gt;。这样的话，”ctrl+w”按下就相当于调用了&lt;code&gt;closeOthers.py&lt;/code&gt;，传入当前的 group 和 index 值，实施了 close_others_by_index 的操作。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brendankemp.com/essays/how-to-add-a-shortcut-for-any-command-in-sublime-text/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Add a Shortcut for Any Command in Sublime Text&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/15379860/close-others-command-shortcut-in-sublime-text-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“Close Others” command shortcut in Sublime Text&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h3&gt;&lt;h4 id=&quot;分屏&quot;&gt;&lt;a href=&quot;#分屏&quot; class=&quot;headerlink&quot; title=&quot;分屏&quot;&gt;&lt;/a&gt;分屏&lt;/h4&gt;&lt;p&gt;在用分屏的时候，我有个很不爽的地方，就是在用 MacBook Air 的时候，屏幕太小了，总是要在左右屏之间拉来拉去。这时候如果除了对半分之外，还有1/9分和9/1分那就好了，这样的话就可以专心看左边/右边的内容了：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;super+alt+[&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;command&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;set_layout&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;args&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cols&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;rows&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cells&quot;&lt;/span&gt;: [[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;super+alt+]&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;command&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;set_layout&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;args&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cols&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;rows&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cells&quot;&lt;/span&gt;: [[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我看了一下，这两个快捷键本来是用来折叠函数等代码块的，这个我用不着，要折叠直接点那个 caret 可能方便点，直接就覆盖了。&lt;/p&gt;
&lt;h4 id=&quot;多光标&quot;&gt;&lt;a href=&quot;#多光标&quot; class=&quot;headerlink&quot; title=&quot;多光标&quot;&gt;&lt;/a&gt;多光标&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;cmd+d 这个快捷键可以用来逐个选择相同单词，在需要重命名数量不多的变量的时候可以用它，特别灵活。&lt;/li&gt;
&lt;li&gt;cmd+ctrl+g 用来对相同单词做全选，正因为是全选，可能也不够灵活，视情况而定。&lt;/li&gt;
&lt;li&gt;cmd+shift+l 多行分裂，鼠标选择多行，然后在每行的最后加上了光标。可能可以在每行最后添加多行注释？&lt;/li&gt;
&lt;li&gt;option+mouse 拉取选择竖行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个练习，把下面的 the 改成首字母大写：&lt;br&gt;The name&lt;br&gt;The name&lt;br&gt;The name&lt;br&gt;The name&lt;br&gt;The name&lt;/p&gt;
&lt;p&gt;1、cmd+d 不用说，逐个选择&lt;br&gt;2、cmd+ctrl+g 的话，要注意如果页面里面还有其他的 the 单词，可能会误伤。&lt;br&gt;3、cmd+shift+l 先获取每行行尾的光标，然后 cmd+&amp;lt;-,修改 t&lt;br&gt;4、option+mouse 直接往下拉一列&lt;br&gt;5、在选中单词 the 之后，也可以用 Convert Case。&lt;/p&gt;
&lt;h4 id=&quot;command-palette-和-goto-Anything&quot;&gt;&lt;a href=&quot;#command-palette-和-goto-Anything&quot; class=&quot;headerlink&quot; title=&quot;command palette 和 goto Anything&quot;&gt;&lt;/a&gt;command palette 和 goto Anything&lt;/h4&gt;&lt;p&gt;在设置文件语法，跳转到其他文件跳转到函数、CSS 选择器(cmd+r)的时候，可以选择 cmd+p 或者 cmd+shift+p。&lt;/p&gt;
&lt;h4 id=&quot;snippet&quot;&gt;&lt;a href=&quot;#snippet&quot; class=&quot;headerlink&quot; title=&quot;snippet&quot;&gt;&lt;/a&gt;snippet&lt;/h4&gt;&lt;p&gt;平时在写 if/else、fun 代码块的时候其实就会有代码提示的。除此之外，还可以自定义代码块。&lt;br&gt;举个例子，设置一个 iife 的代码片段，tools-&amp;gt;new snippets,跳出这个:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;snippet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello, $&amp;#123;1:this&amp;#125; is a $&amp;#123;2:snippet&amp;#125;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]]&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- Optional: &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt; a tabTrigger to define how to trigger the snippet --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- &amp;lt;tabTrigger&amp;gt;hello&amp;lt;/tabTrigger&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Optional: Set a scope to limit where the snippet will trigger --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- &amp;lt;scope&amp;gt;source.python&amp;lt;/scope&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;snippet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把下面的 tabTrigger 取消注释，hello-&amp;gt;iife,然后把 content 的内容改一下，变成这样：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;snippet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]]&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- Optional: &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt; a tabTrigger to define how to trigger the snippet --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tabTrigger&lt;/span&gt;&amp;gt;&lt;/span&gt;iife&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tabTrigger&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- Optional: &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt; a scope to limit where the snippet will trigger --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;source.js&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/snippet&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;中间那个&lt;code&gt;$1&lt;/code&gt;的意思就是光标会在那儿，然后下面的&lt;code&gt;&amp;lt;scope&amp;gt;source.js&amp;lt;/scope&amp;gt;&lt;/code&gt;就是只会在js 文件里面生效。&lt;/p&gt;
&lt;h4 id=&quot;等号附近的对齐&quot;&gt;&lt;a href=&quot;#等号附近的对齐&quot; class=&quot;headerlink&quot; title=&quot;等号附近的对齐&quot;&gt;&lt;/a&gt;等号附近的对齐&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// turn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; app = item1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; getcha = item2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; aswgwygwubd = item3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// int o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; app         = item1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; getcha      = item2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; aswgwygwubd = item3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;选中，ctrl+option+]&lt;/p&gt;
&lt;h4 id=&quot;join-lines&quot;&gt;&lt;a href=&quot;#join-lines&quot; class=&quot;headerlink&quot; title=&quot;join lines&quot;&gt;&lt;/a&gt;join lines&lt;/h4&gt;&lt;p&gt;cmd+j 可以把多行连成一行。比方说，&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  one,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tow,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  three,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  four&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;光标放在左括号，按几下 cmd+j, 数组就变成单行显示了。&lt;/p&gt;
&lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;h4 id=&quot;AdvancedNewFile&quot;&gt;&lt;a href=&quot;#AdvancedNewFile&quot; class=&quot;headerlink&quot; title=&quot;AdvancedNewFile&quot;&gt;&lt;/a&gt;AdvancedNewFile&lt;/h4&gt;&lt;p&gt;这是个插件，用来快速添加文件。在此之前我一直都是在 iTerm 里面用 touch 来添加文件，因为在 sublime 里面太慢了，直到有了这个插件。安装好这个插件之后，cmd+option+n，然后下方会有个框来输入文件的名字，也可以加路径，如果输入的路径是原来没有的话，那么就会新建。&lt;/p&gt;
&lt;h4 id=&quot;gist&quot;&gt;&lt;a href=&quot;#gist&quot; class=&quot;headerlink&quot; title=&quot;gist&quot;&gt;&lt;/a&gt;gist&lt;/h4&gt;&lt;p&gt;gist 是一个保存和分析 snippet 的地方，如果有什么常用的代码段，可以保存在那边。与其开个页面到 gist 那边复制粘贴，不如选择直接在 sublime 里面获取和保存代码段。&lt;/p&gt;
&lt;p&gt;在 gist 的设置里面把 token 填进去就相当于和 gist 建立了联系，之后要创建、抓取gist的话，可以用 cmd+shift+p 来搜索，在里面选择 create public gist等等。&lt;/p&gt;
&lt;h4 id=&quot;docblockr&quot;&gt;&lt;a href=&quot;#docblockr&quot; class=&quot;headerlink&quot; title=&quot;docblockr&quot;&gt;&lt;/a&gt;docblockr&lt;/h4&gt;&lt;p&gt;这是个插件，用来快速生成注释块，用在函数、类、变量之前的时候还会有一些智能提示。比如说：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;introYou&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; name + age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// add /** below that function and 得到这个结果，光标在第一个 type上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param  &amp;#123;[type]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param  &amp;#123;[type]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return &amp;#123;[type]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;introYou&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; name + age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Gutter-Color&quot;&gt;&lt;a href=&quot;#Gutter-Color&quot; class=&quot;headerlink&quot; title=&quot;Gutter Color&quot;&gt;&lt;/a&gt;Gutter Color&lt;/h4&gt;&lt;h4 id=&quot;HTML-CSS-JS-prettify&quot;&gt;&lt;a href=&quot;#HTML-CSS-JS-prettify&quot; class=&quot;headerlink&quot; title=&quot;HTML-CSS-JS prettify&quot;&gt;&lt;/a&gt;HTML-CSS-JS prettify&lt;/h4&gt;&lt;p&gt;参考：&lt;a href=&quot;https://www.youtube.com/playlist?list=PLuwqxbvf3olpLsnFvo06gbrkcEB5o7K0g&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text Perfect Workflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;iTerm&quot;&gt;&lt;a href=&quot;#iTerm&quot; class=&quot;headerlink&quot; title=&quot;iTerm&quot;&gt;&lt;/a&gt;iTerm&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ctrl + w : 删除前一个单词&lt;/li&gt;
&lt;li&gt;Command + r : 清除屏幕上的内容&lt;/li&gt;
&lt;li&gt;Command + t/w : 打开/关闭 tab&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Chrome&quot;&gt;&lt;a href=&quot;#Chrome&quot; class=&quot;headerlink&quot; title=&quot;Chrome&quot;&gt;&lt;/a&gt;Chrome&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xunziji/archive/2012/08/23/2652530.html#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/xunziji/archive/2012/08/23/2652530.html#&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://chenyiqiao.gitbooks.io/git/content/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自制 Git 书&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Sublime text | iTerm | Chrome | Git | More…&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Gitbook 使用手册</title>
    <link href="http://yoursite.com/2016/06/02/gitbook-doc/"/>
    <id>http://yoursite.com/2016/06/02/gitbook-doc/</id>
    <published>2016-06-02T07:51:39.000Z</published>
    <updated>2016-06-12T08:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;这篇文章基本上是 &lt;a href=&quot;http://toolchain.gitbook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitbook Toolchain Doc&lt;/a&gt; 的翻译，后面还补上了关于怎么托管到 Github repo 上的内容。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装和起步&quot;&gt;&lt;a href=&quot;#安装和起步&quot; class=&quot;headerlink&quot; title=&quot;安装和起步&quot;&gt;&lt;/a&gt;安装和起步&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 全局安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install gitbook-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 创建一个 boilerplate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gitbook init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 本地预览&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gitbook serve&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h2&gt;&lt;p&gt;在运行&lt;code&gt;gitbook init&lt;/code&gt;的时候会自动生成几个文件。所有在&lt;code&gt;SUMMARY.md&lt;/code&gt;里面列出的 Markdown/Asciidoc 文件都会转换成 HTML 文件(以供相应的页面渲染)。支持多语言的书的目录结构稍微有点不同。其实就是在根目录下加一个&lt;code&gt;LANGS.md&lt;/code&gt;，把不同语言的版本放到不同的文件夹下面。&lt;/p&gt;
&lt;p&gt;一个基本的 Gitbook 的目录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── book.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── SUMMARY.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── chapter-1/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   ├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   └── something.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── chapter-2/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── something.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些文件的作用分别是：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;book.json&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;保存配置信息 (optional)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;README.md&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;书的封面介绍(required)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUMMARY.md&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;目录(optional)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GLOSSARY.md&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;术语表(optional)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;静态文件和图片&quot;&gt;&lt;a href=&quot;#静态文件和图片&quot; class=&quot;headerlink&quot; title=&quot;静态文件和图片&quot;&gt;&lt;/a&gt;静态文件和图片&lt;/h3&gt;&lt;p&gt;静态文件指的是那些没有列在&lt;code&gt;SUMMARY.md&lt;/code&gt;里面的文件。除非是列在忽略文件里面，否则静态文件直接拷贝到输出(也就是 md 文件，不会渲染成 HTML)。&lt;/p&gt;
&lt;h3 id=&quot;忽略文件和文件夹&quot;&gt;&lt;a href=&quot;#忽略文件和文件夹&quot; class=&quot;headerlink&quot; title=&quot;忽略文件和文件夹&quot;&gt;&lt;/a&gt;忽略文件和文件夹&lt;/h3&gt;&lt;p&gt;Gitbook 会读取&lt;code&gt;.gitignore&lt;/code&gt;,&lt;code&gt;.bookignore&lt;/code&gt;和&lt;code&gt;.ignore&lt;/code&gt;文件来获得应该要忽略的文件。格式就是常规的&lt;code&gt;.gitignore&lt;/code&gt;的格式。&lt;/p&gt;
&lt;h3 id=&quot;在项目的子文件夹下的书&quot;&gt;&lt;a href=&quot;#在项目的子文件夹下的书&quot; class=&quot;headerlink&quot; title=&quot;在项目的子文件夹下的书&quot;&gt;&lt;/a&gt;在项目的子文件夹下的书&lt;/h3&gt;&lt;p&gt;有时候书是给软件项目作文档用，一般就会把书放在项目的子目录下面(比如说放在&lt;code&gt;docs/&lt;/code&gt;)。这种情况你可以配置&lt;code&gt;root&lt;/code&gt;选项来告诉 Gitbook 上哪去找你的书：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── book.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── docs/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── SUMMARY.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在&lt;code&gt;book.json&lt;/code&gt;里面：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;root&amp;quot;: &amp;quot;./docs&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;SUMMARY-文件&quot;&gt;&lt;a href=&quot;#SUMMARY-文件&quot; class=&quot;headerlink&quot; title=&quot;SUMMARY 文件&quot;&gt;&lt;/a&gt;SUMMARY 文件&lt;/h2&gt;&lt;p&gt;Gitbook 用&lt;code&gt;SUMMARY.md&lt;/code&gt;这个文件里定义书的章节结构，这个文件用来生成书的目录。这个文件的形式就是包含链接的列表。链接的标题就是章节的名字，链接本身指向对应的 md 文件。&lt;/p&gt;
&lt;p&gt;一个简单的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Summary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Part I](part1/README.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * [Writing is nice](part1/writing.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * [GitBook is nice](part1/gitbook.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Part II](part2/README.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * [We love feedback](part2/feedback_please.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * [Better tools for authors](part2/better_tools.md)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要继续划分结构可以用 anchor 来充当小节:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Summary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### Part I&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Writing is nice](part1/writing.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [GitBook is nice](part1/gitbook.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### Part II&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [We love feedback](part2/feedback_please.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Better tools for authors](part2/better_tools.md)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Last part without title](part3/title.md)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般情况下，用列表和列表嵌套就足以表达结构层次了。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;可以通过&lt;code&gt;book.json&lt;/code&gt;来提供灵活的配置。&lt;/p&gt;
&lt;h3 id=&quot;通用配置：&quot;&gt;&lt;a href=&quot;#通用配置：&quot; class=&quot;headerlink&quot; title=&quot;通用配置：&quot;&gt;&lt;/a&gt;通用配置：&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配置属性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;root&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;包含书的相关文件的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;structure&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;指定 readme, summary, glossary 这些文件的路径。参考下面的&lt;a href=&quot;###结构&quot;&gt;结构&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;书的标题，默认从 README 里面提取&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;书的介绍，默认从 README 里面提取&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;author&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;书的作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isbn&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;language&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;语言，默认是&lt;code&gt;en&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;direction&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;可以是 rtl 或者 ltr，默认值取决于语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gitbook&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Gitbook 的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;p&gt;插件及其配置在&lt;code&gt;book.json&lt;/code&gt;里面设置，举个例子:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;plugins&amp;quot;: [&amp;quot;edit-link&amp;quot;, &amp;quot;prism&amp;quot;, &amp;quot;-highlight&amp;quot;, &amp;quot;github&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;pluginsConfig&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;edit-link&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;base&amp;quot;: &amp;quot;https://github.com/chenyiqiao/selfmade-gitbook/blob/master&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;label&amp;quot;: &amp;quot;Edit This Page&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;github&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;url&amp;quot;: &amp;quot;https://github.com/chenyiqiao/selfmade-gitbook&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h3&gt;&lt;p&gt;默认情况下，根目录下的诸如&lt;code&gt;README.md&lt;/code&gt;和&lt;code&gt;SUMMARY.md&lt;/code&gt;这些文件都有着其对应的目的。不过，也可以手动配置别的名字：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;structure.readme&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;介绍，默认是&lt;code&gt;README.md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;structure.summary&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;目录，默认是&lt;code&gt;SUMMARY.md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;structure.glossary&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;术语表，默认是&lt;code&gt;GLOSSARY.md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;structure.languages&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;语言，默认是&lt;code&gt;LANGS.md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;PDF-选项&quot;&gt;&lt;a href=&quot;#PDF-选项&quot; class=&quot;headerlink&quot; title=&quot;PDF 选项&quot;&gt;&lt;/a&gt;PDF 选项&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pdf.pageNumbers&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;每一页页脚加上页数(默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.fontSize&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;字体大小，默认是 12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.fontFamily&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;字体，默认是&lt;code&gt;Arial&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.paperSize&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;纸张大小，默认是 a4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.margin.top&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;上外边距，默认56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.margin.bottom&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;下外边距，默认56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.margin.right&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;右外边距，默认62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf.margin.left&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左外边距，默认62&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;术语表&quot;&gt;&lt;a href=&quot;#术语表&quot; class=&quot;headerlink&quot; title=&quot;术语表&quot;&gt;&lt;/a&gt;术语表&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;GLOSSARY.md&lt;/code&gt;这个文件里面，我们可以给一些术语加上定义。当书的章节里面出现了定义过的术语的时候，就会出现高亮。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GLOSSARY.md&lt;/code&gt;的格式是一个&lt;code&gt;h2&lt;/code&gt;标题带一段相关的描述：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## Term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Definition for this term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Another term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;With it&amp;apos;s definition, this can contain bold text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and all other kinds of inline markup ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;多语言&quot;&gt;&lt;a href=&quot;#多语言&quot; class=&quot;headerlink&quot; title=&quot;多语言&quot;&gt;&lt;/a&gt;多语言&lt;/h2&gt;&lt;p&gt;通过在根目录下添加一个&lt;code&gt;LANGS.md&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Languages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [English](en/)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [French](fr/)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [Español](es/)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个子文件夹里面也可以包含&lt;code&gt;book.json&lt;/code&gt;文件，相应的配置会覆盖/扩展根目录下&lt;code&gt;book.json&lt;/code&gt;的配置。但是这里不能配置插件，插件只能在根目录下的&lt;code&gt;book.json&lt;/code&gt;配置。&lt;/p&gt;
&lt;h2 id=&quot;AsciiDoc&quot;&gt;&lt;a href=&quot;#AsciiDoc&quot; class=&quot;headerlink&quot; title=&quot;AsciiDoc&quot;&gt;&lt;/a&gt;AsciiDoc&lt;/h2&gt;&lt;p&gt;除了 md 之外，Gitbook 还支持 asciiDoc 的格式。相关的文档可以参考 &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AsciiDoc Syntax Quick Reference&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;和 md 一样，Gitbook 用一些特殊的文件来&lt;br&gt;描述书的特征：&lt;code&gt;README.adoc&lt;/code&gt;,&lt;code&gt;SUMMARY.adoc&lt;/code&gt;,&lt;code&gt;LANGS.adoc&lt;/code&gt;,&lt;code&gt;GLOSSARY.adoc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;举几个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// SUMMARY.adoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= Summary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:chapter-1/README.adoc[Chapter 1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.. link:chapter-1/ARTICLE1.adoc[Article 1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.. link:chapter-1/ARTICLE2.adoc[Article 2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... link:chapter-1/ARTICLE-1-2-1.adoc[Article 1.2.1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:chapter-2/README.adoc[Chapter 2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:chapter-3/README.adoc[Chapter 3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:chapter-4/README.adoc[Chapter 4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.. Unfinished article&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. Unfinished Chapter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// LANGS.adoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= Languages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:en/[English]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. link:fr/[French]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// GLOSSARY.adoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= Glossary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;== Magic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sufficiently advanced technology, beyond the understanding of the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;observer producing a sense of wonder.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;== PHP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A popular web programming language, used by many large websites such&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;as Facebook. Rasmus Lerdorf originally created PHP in 1994 to power&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;his personal homepage (PHP originally stood for &amp;quot;Personal Home Page&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;but now stands for &amp;quot;PHP: Hypertext Preprocessor&amp;quot;).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;生成-eBooks-和-PDFs&quot;&gt;&lt;a href=&quot;#生成-eBooks-和-PDFs&quot; class=&quot;headerlink&quot; title=&quot;生成 eBooks 和 PDFs&quot;&gt;&lt;/a&gt;生成 eBooks 和 PDFs&lt;/h2&gt;&lt;p&gt;Gitbook 可以生成网站，也可以生成电子书格式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Generate a PDF file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gitbook pdf ./ ./mybook.pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Generate an ePub file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gitbook epub ./ ./mybook.epub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Generate a Mobi file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gitbook mobi ./ ./mybook.mobi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意转换成电子书需要&lt;code&gt;ebook-convert&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;插件-1&quot;&gt;&lt;a href=&quot;#插件-1&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;p&gt;通过插件，我们可以在书里面加上数学公式，Google Analytic 等等。可以在 &lt;a href=&quot;https://plugins.gitbook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;plugins.gitbook.com&lt;/a&gt; 找到想要的插件。&lt;/p&gt;
&lt;h3 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h3&gt;&lt;p&gt;首先在&lt;code&gt;book.json&lt;/code&gt;里面指定你需要用的插件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;plugins&amp;quot;: [&amp;quot;myPlugin&amp;quot;, &amp;quot;anotherPlugin&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后运行&lt;code&gt;gitbook install&lt;/code&gt;即可把指定的插件下载下来。&lt;/p&gt;
&lt;h3 id=&quot;配置插件&quot;&gt;&lt;a href=&quot;#配置插件&quot; class=&quot;headerlink&quot; title=&quot;配置插件&quot;&gt;&lt;/a&gt;配置插件&lt;/h3&gt;&lt;p&gt;有的插件需要提供参数配置，这些参数在&lt;code&gt;book.json&lt;/code&gt;的&lt;code&gt;pluginsConfig&lt;/code&gt;字段中给出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;pluginsConfig&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;edit-link&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;base&amp;quot;: &amp;quot;https://github.com/chenyiqiao/selfmade-gitbook/blob/master&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;label&amp;quot;: &amp;quot;Edit This Page&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;github&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;url&amp;quot;: &amp;quot;https://github.com/chenyiqiao/selfmade-gitbook&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有更多关于插件的 &lt;a href=&quot;http://toolchain.gitbook.com/plugins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;，包括怎么自己写插件。但是目前暂时还用不着，有需要了再看。&lt;/p&gt;
&lt;h2 id=&quot;把内容托管在-Github-上&quot;&gt;&lt;a href=&quot;#把内容托管在-Github-上&quot; class=&quot;headerlink&quot; title=&quot;把内容托管在 Github 上&quot;&gt;&lt;/a&gt;把内容托管在 Github 上&lt;/h2&gt;&lt;p&gt;如果希望别人也可以参与修改和编写，那么把内容托管在 Github 上显然是最好的选择。成功地和 Github repo 建立起联系之后，Github repo 的修改都会触发书的改变。&lt;/p&gt;
&lt;p&gt;集成到 Github 需要三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立 Permission&lt;/li&gt;
&lt;li&gt;把书链接到一个 Github 仓库&lt;/li&gt;
&lt;li&gt;设置 webhooks&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;建立 Permission&lt;br&gt;要把 Github 集成进来，首先要授权 Gitbook 访问你的 Github账号。你需要在 &lt;a href=&quot;https://www.gitbook.com/settings&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;account settings&lt;/a&gt; 里面完成设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把书连接到一个 Github repo&lt;br&gt;在你的书的设置页面，填上要连接的 Github repo 的信息：&lt;code&gt;&amp;lt;github-username&amp;gt;/&amp;lt;github-repository-name&amp;gt;&lt;/code&gt;。当然了，在此之前你需要新建一个仓库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置 webhooks&lt;br&gt;最后一步要对你的仓库进行配置，然后你的仓库一旦更新了，Gitbook 就会得到通知，进而修改书的内容。具体的操作就是在仓库的设置里面找到&lt;code&gt;Webhooks&amp;amp;services&lt;/code&gt;，选择 addhooks，把书对应的 URL 填进去。这样一来，一旦仓库有了 Push 事件，Gitbook 就会得到通知。完了之后，可以去 check webhooks 看是不是设置成功了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;设置成功了之后，我们可以在 Github 仓库管理内容，每次仓库有了新的 push，书就会有对应的更新。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://toolchain.gitbook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ToolChain.gitbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.gitbook.com/github/can-i-host-on-github.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FAQ: Can I host my content on Github?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.gitbook.com/books/how-can-i-use-git.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FAQ: How can I use git to update book?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章基本上是 &lt;a href=&quot;http://toolchain.gitbook.com/&quot;&gt;Gitbook Toolchain Doc&lt;/a&gt; 的翻译，后面还补上了关于怎么托管到 Github repo 上的内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>理解引用</title>
    <link href="http://yoursite.com/2016/05/30/know-the-reference/"/>
    <id>http://yoursite.com/2016/05/30/know-the-reference/</id>
    <published>2016-05-30T11:36:11.000Z</published>
    <updated>2016-06-12T08:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;(原文：&lt;a href=&quot;http://perfectionkills.com/know-thy-reference/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;know thy reference&lt;/a&gt; - &lt;em&gt;kangax&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;不久前的某一个星期天清晨，我躺床上看 HackerNews，有一篇叫「This in JavaScript」的文章，我稍微扫了两眼。不出意外，就是函数调用、方法调用、显式绑定、构造函数实例化这档子事。这篇文章特别长，我越看就越觉得，这一大堆的解释和例子会给一个不了解 this 机制的人带来多大的心理阴影啊。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;我想起来几年前我第一次看DC的「JavaScript The Good Parts」，当时看完书里的相关总结之后觉得无比清晰，书里简要地列出了这几条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;this&lt;/code&gt; parameter is very important in object oriented programming, and its value is &lt;strong&gt;determined by the invocation pattern&lt;/strong&gt;.There are &lt;strong&gt;four patterns of invocation&lt;/strong&gt; in JavaScript: the &lt;strong&gt;method invocation&lt;/strong&gt; pattern,the &lt;strong&gt;function invocation&lt;/strong&gt; pattern,the &lt;strong&gt;constructor invocation&lt;/strong&gt; pattern and the &lt;strong&gt;apply invocation pattern&lt;/strong&gt;.The patterns differ in how the bonus parameter this is initialized.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;只由调用方式决定，而且只有四种情况。看看，这说得多简单。&lt;/p&gt;
&lt;p&gt;于是我去评论里看有没有人说 HackerNews 的这篇文章讲得太复杂了。果然，很多人都搬出了「JavaScript The Good Parts」里的总结，其中一个人提炼了一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The keyword &lt;code&gt;this&lt;/code&gt; refers to whatever is left of the dot at call-time.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If there’s nothing to the left of the dot, then &lt;code&gt;this&lt;/code&gt; refers to the root scope(e.g. Window)&lt;/li&gt;
&lt;li&gt;A few functions change the behavior of &lt;code&gt;this&lt;/code&gt; - bind, call and apply&lt;/li&gt;
&lt;li&gt;The keyword &lt;code&gt;new&lt;/code&gt; binds this to the object just created&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简直精辟。但是我注意到里面的一句话－&lt;em&gt;“whatever is left of the dot at call-time”&lt;/em&gt;。乍一看很有道理嘛，比方说&lt;code&gt;foo.bar()&lt;/code&gt;,&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;foo&lt;/code&gt;;又比方说&lt;code&gt;foo.bar.baz()&lt;/code&gt;,&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;foo.bar&lt;/code&gt;。但是&lt;code&gt;(f = foo.bar)()&lt;/code&gt;呢？在这里所谓的「Whatever is left of the dot at call-time」就是&lt;code&gt;foo&lt;/code&gt;，那&lt;code&gt;this&lt;/code&gt;就指向&lt;code&gt;foo&lt;/code&gt;咯？&lt;/p&gt;
&lt;p&gt;为了拯救前端程序员于水火之中，我留言说，所谓的「句号左边的东西」可能没这么简单，要真的理解&lt;code&gt;this,&lt;/code&gt;你可能需要理解引用和它的&lt;code&gt;base values&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;也是这一次经历我才真的意识到引用的概念其实很少被提到。我去搜了一下”JavaScript reference”，结果出来一些关于”pass-by-reference vs. pass-by-value”的讨论。不行，我得出来救场了。&lt;/p&gt;
&lt;p&gt;这就是为什么我要来写这篇博客。&lt;/p&gt;
&lt;p&gt;我会解释 ECMAScript 里面神秘的引用，一旦你理解了引用，你就会明白通过引用来了解&lt;code&gt;this&lt;/code&gt;的绑定是多么轻松，你也会发现读 ECMAScript 的规范容易得多了。&lt;/p&gt;
&lt;h3 id=&quot;关于引用&quot;&gt;&lt;a href=&quot;#关于引用&quot; class=&quot;headerlink&quot; title=&quot;关于引用&quot;&gt;&lt;/a&gt;关于引用&lt;/h3&gt;&lt;p&gt;老实说，看到关于引用的讨论那么少我也多多少少可以理解，毕竟这也并不是语言本身的一部分。引用只是一种机制，&lt;a href=&quot;https://es5.github.io/#x8.7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用来描述ECMAScript里的特定行为&lt;/a&gt;。它对于解释引擎的实现至关重要，但是它们在代码里是看不见摸不着的。&lt;/p&gt;
&lt;p&gt;当然，理解它对于写代码完完全全是必要的。&lt;/p&gt;
&lt;p&gt;回到我们之前的问题：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;foo.bar()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(f = foo.bar)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到底为什么第一个的&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;foo&lt;/code&gt;,而第二个指向全局对象呢？&lt;/p&gt;
&lt;p&gt;你可能会说，&lt;em&gt;“括号左边的表达式里面完成了一次对 f 的赋值，赋值完了之后就相当于调用 f() ,这样的话就是一次函数调用，而不是方法调用了。”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;好的，那这个呢：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, foo.bar)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;“噢，这是个圆括号运算符嘛！它完成从左边到右边的求值，所以它肯定和 foo.bar() 是一样的，所以它的&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;foo&lt;/code&gt;。”&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bar: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    &#39;use strict&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, foo.bar)() &lt;span class=&quot;comment&quot;&gt;//undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;“呃……真是奇怪啊”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;那这个呢：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(foo.bar)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;“呃，考虑到上一个例子，肯定也是&lt;code&gt;undefined&lt;/code&gt;吧，应该是圆括号搞了什么鬼。”&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(foo.bar)()  &lt;span class=&quot;comment&quot;&gt;//&amp;#123;bar: function()&amp;#123; ... &amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;“好吧……我服了。”&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;理论&lt;/h3&gt;&lt;p&gt;ECMAScript把引用定义成「resolved name binding」。这是由三个部分组成的抽象实体 － &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;和&lt;code&gt;strict flag&lt;/code&gt;，第三个好懂，现在咱们聊前两个就够了。&lt;/p&gt;
&lt;p&gt;创建引用有两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Identifier resolution&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;property access&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比方说吧，&lt;code&gt;foo&lt;/code&gt;创建了一个引用，&lt;code&gt;foo.bar&lt;/code&gt;也创建了一个引用。而像&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;&amp;quot;foo&amp;quot;&lt;/code&gt;, &lt;code&gt;/x/&lt;/code&gt;, &lt;code&gt;{ }&lt;/code&gt;, &lt;code&gt;[ 1,2,3 ]&lt;/code&gt;这些字面量值和函数表达式&lt;code&gt;(function(){})&lt;/code&gt;就没有。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Reference?&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;“foo”&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/x/&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;({})&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(function(){})&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Could be unresolved reference if &lt;code&gt;foo&lt;/code&gt; is not defined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;foo.bar&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Property reference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(123).toString&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Property reference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(function(){}).toString&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Property reference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1, foo.bar)()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Already evaluated, BUT see grouping operator exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(f = foo.bar)()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NO&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Already evaluated, BUT see grouping operator exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(foo)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Grouping operator does not evaluate reference&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(foo.bar)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;YES&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Grouping operator does not evaluate reference&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;先别管后面四个，我们待会再看。&lt;/p&gt;
&lt;p&gt;每次一个引用创建的时候，它的组成部分&lt;code&gt;base&lt;/code&gt;,&lt;code&gt;name&lt;/code&gt;,&lt;code&gt;strict&lt;/code&gt;都被赋上值。&lt;code&gt;name&lt;/code&gt;就是解析的标识符或者属性名，&lt;code&gt;base&lt;/code&gt;就是属性对象或者环境对象。&lt;/p&gt;
&lt;p&gt;可能把引用理解成一个没有原型的JavaScript对象会比较好，它就只有&lt;code&gt;base&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;和&lt;code&gt;strict&lt;/code&gt;三个属性。下面举两个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//when foo is defined earlier&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reference = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  base: Environment,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  strict: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这就是所谓的「Property Reference」&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reference = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  base: foo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  strict: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有第三种情况，即不可解析引用。如果在作用域里找不到标识符，引用的&lt;code&gt;base&lt;/code&gt;就会设为&lt;code&gt;undefined&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//when foo is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reference = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  base: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  strict: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你肯定见过，解析不了的引用可能会导致引用错误－(“foo is not defined”).&lt;/p&gt;
&lt;p&gt;本质上来说，引用就是一种代表名称绑定的简单机制，它把对象的属性解析和变量解析抽象出一个类似对象的数据结构:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reference = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  base: &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; or Environment,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在我们知道ECMAScript底层做了什么了，但是这对解释&lt;code&gt;this&lt;/code&gt;的指向有什么用呢？&lt;/p&gt;
&lt;h3 id=&quot;函数调用&quot;&gt;&lt;a href=&quot;#函数调用&quot; class=&quot;headerlink&quot; title=&quot;函数调用&quot;&gt;&lt;/a&gt;函数调用&lt;/h3&gt;&lt;p&gt;看看&lt;a href=&quot;https://es5.github.io/#x11.2.3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;函数调用的时候发生了什么&lt;/a&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Let ref be the result of evaluating MemberExpression.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Let func be GetValue(ref).&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Let argList be the result of evaluating Arguments, producing an internal list of argument values (see 11.2.4).&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If Type(func) is not Object, throw a TypeError exception.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If IsCallable(func) is false, throw a TypeError exception.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;If Type(ref) is Reference, then&lt;/b&gt;&lt;br&gt;&lt;ol&gt;
&lt;li&gt;&lt;b&gt;If IsPropertyReference(ref) is true, then&lt;/b&gt;&lt;br&gt;&lt;ol&gt;
&lt;li&gt;&lt;b&gt;Let thisValue be GetBase(ref).&lt;/b&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Else, the base of ref is an Environment Record&lt;/b&gt;&lt;br&gt;&lt;ol&gt;
&lt;li&gt;&lt;b&gt;Let thisValue be the result of calling the ImplicitThisValue concrete method of GetBase(ref).&lt;/b&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Else, Type(ref) is not Reference.&lt;/b&gt;&lt;br&gt;&lt;ol&gt;
&lt;li&gt;&lt;b&gt;Let thisValue be undefined.&lt;/b&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Return the result of calling the [[Call]] internal method on func, providing thisValue as the this value and providing the list argList as the argument values.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;加粗的第六步基本上就解释了DC四条里面的1、2两条:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//foo.bar()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- `foo.bar`是个属性引用吗？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 是的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 那取它的base，也就是`foo`作为`this`吧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//foo()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- `foo`是个属性引用吗？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 不是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 那你的base就是undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//(function()&amp;#123;&amp;#125;)()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 什么？你连引用都不是啊，那不用看了，undefined&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;赋值，逗号，圆括号运算符&quot;&gt;&lt;a href=&quot;#赋值，逗号，圆括号运算符&quot; class=&quot;headerlink&quot; title=&quot;赋值，逗号，圆括号运算符&quot;&gt;&lt;/a&gt;赋值，逗号，圆括号运算符&lt;/h3&gt;&lt;p&gt;有了前面的了解，我们看看能不能解释得了下面这几个函数调用的&lt;code&gt;this&lt;/code&gt;指向。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(f = foo.bar)()&lt;/li&gt;
&lt;li&gt;(1, foo.bar)()&lt;/li&gt;
&lt;li&gt;(foo.bar)()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从第一个赋值运算说起，括号里是一个简单赋值操作，如果我们看看&lt;a href=&quot;https://es5.github.io/#x11.13.1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简单赋值&lt;/a&gt;做了些什么的话，我们可能可以看出点端倪：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Let lref be the result of evaluating LeftHandSideExpression.&lt;/li&gt;
&lt;li&gt;Let rref be the result of evaluating AssignmentExpression.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Let rval be GetValue(rref).&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Throw a SyntaxError exception if the following conditions are all true:&lt;ul&gt;
&lt;li&gt;Type(lref) is Reference is true&lt;/li&gt;
&lt;li&gt;IsStrictReference(lref) is true&lt;/li&gt;
&lt;li&gt;Type(GetBase(lref)) is Environment Record&lt;/li&gt;
&lt;li&gt;GetReferencedName(lref) is either “eval” or “arguments”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Call PutValue(lref, rval).&lt;/li&gt;
&lt;li&gt;Return rval.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意到右边的表达式在赋值之前通过内部的&lt;code&gt;GetValue()&lt;/code&gt;求值。在我们的例子里面，&lt;code&gt;foo.bar&lt;/code&gt;引用被转换成了一个函数对象，那么以&lt;em&gt;非引用方式&lt;/em&gt;调用函数的话，&lt;code&gt;this&lt;/code&gt;就指向了&lt;code&gt;undefined&lt;/code&gt;。所以深入剖析的话，比起来&lt;code&gt;foo.bar()&lt;/code&gt;,&lt;code&gt;(f = foo.bar)()&lt;/code&gt;其实更像是&lt;code&gt;(function(){})()&lt;/code&gt;。就是说，它是个求过值的表达式，而不是一个拥有&lt;code&gt;base&lt;/code&gt;的引用。&lt;/p&gt;
&lt;p&gt;第二个逗号运算就类似了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Let lref be the result of evaluating Expression.&lt;/li&gt;
&lt;li&gt;Call GetValue(lref).&lt;/li&gt;
&lt;li&gt;Let rref be the result of evaluating AssignmentExpression.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Return GetValue(rref).&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过了&lt;code&gt;GetValue&lt;/code&gt;，引用转换成了函数对象，&lt;code&gt;this&lt;/code&gt;指向了&lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;最后是圆括号运算符：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Return the result of evaluating Expression. This may be of type Reference.&lt;/li&gt;
&lt;li&gt;NOTE This algorithm does not apply GetValue to the result of evaluating Expression. The principal motivation for this is so that operators such as delete and typeof may be applied to parenthesised expressions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那很明白了，圆括号运算符没有对引用进行转换，这也就是为什么它的&lt;code&gt;this&lt;/code&gt;指向了&lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;typeof运算符&quot;&gt;&lt;a href=&quot;#typeof运算符&quot; class=&quot;headerlink&quot; title=&quot;typeof运算符&quot;&gt;&lt;/a&gt;typeof运算符&lt;/h3&gt;&lt;p&gt;既然都聊到这儿了，干脆聊一聊别的。看看typeof运算符的说法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Let val be the result of evaluating UnaryExpression.&lt;/li&gt;
&lt;li&gt;If Type(val) is Reference, then&lt;ol&gt;
&lt;li&gt;&lt;b&gt;If IsUnresolvableReference(val) is true, return “undefined”.&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Let val be GetValue(val).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Return a String determined by Type(val) according to Table 20.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这也就是为什么我们对一个无法解析的引用使用&lt;code&gt;typeof&lt;/code&gt;操作符的时候并不会报错。但是如果不用&lt;code&gt;typeof&lt;/code&gt;运算符，直接做一个声明呢：&lt;/p&gt;
&lt;p&gt;Expression Statement:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Let exprRef be the result of evaluating Expression.&lt;/li&gt;
&lt;li&gt;Return (normal, &lt;b&gt;GetValue(exprRef)&lt;/b&gt;, empty).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GetValue():&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If Type(V) is not Reference, return V.&lt;/li&gt;
&lt;li&gt;Let base be the result of calling GetBase(V).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;If IsUnresolvableReference(V), throw a ReferenceError exception.&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看到了吧，过不了&lt;code&gt;GetValue&lt;/code&gt;这一关，所以说出现了没法解析的声明直接就报错了。&lt;/p&gt;
&lt;h3 id=&quot;delete运算符&quot;&gt;&lt;a href=&quot;#delete运算符&quot; class=&quot;headerlink&quot; title=&quot;delete运算符&quot;&gt;&lt;/a&gt;delete运算符&lt;/h3&gt;&lt;p&gt;长话短说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果不是个引用，返回&lt;code&gt;true&lt;/code&gt;(delete 1,delete /x/)&lt;/li&gt;
&lt;li&gt;如果是没法解析的引用(delete iDontExist)&lt;ul&gt;
&lt;li&gt;严格模式，报错&lt;/li&gt;
&lt;li&gt;否则返回&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果确实是个属性引用，那就删了它,返回&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果是全局对象作为&lt;code&gt;base&lt;/code&gt;的属性&lt;ul&gt;
&lt;li&gt;严格模式，报错&lt;/li&gt;
&lt;li&gt;否则，删除，返回&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;(原文：&lt;a href=&quot;http://perfectionkills.com/know-thy-reference/&quot;&gt;know thy reference&lt;/a&gt; - &lt;em&gt;kangax&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;不久前的某一个星期天清晨，我躺床上看 HackerNews，有一篇叫「This in JavaScript」的文章，我稍微扫了两眼。不出意外，就是函数调用、方法调用、显式绑定、构造函数实例化这档子事。这篇文章特别长，我越看就越觉得，这一大堆的解释和例子会给一个不了解 this 机制的人带来多大的心理阴影啊。&lt;/p&gt;
    
    </summary>
    
    
      <category term="EcmaScript" scheme="http://yoursite.com/tags/EcmaScript/"/>
    
  </entry>
  
  <entry>
    <title>用 Vue.js 和 Firebase 构建一个笔记应用</title>
    <link href="http://yoursite.com/2016/05/30/build-a-noteApp-with-Vue-js-Firebase/"/>
    <id>http://yoursite.com/2016/05/30/build-a-noteApp-with-Vue-js-Firebase/</id>
    <published>2016-05-30T04:20:56.000Z</published>
    <updated>2016-06-12T08:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;前几天翻译了基于&lt;a href=&quot;https://coligo.io/learn-vuex-by-building-notes-app/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博客&lt;/a&gt;的文章：&lt;a href=&quot;https://segmentfault.com/a/1190000005015164&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Vuex 构建一个笔记应用&lt;/a&gt;。在此基础上我对它做了一些更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把数据同步到 Firebase 上，不会每次关掉浏览器就丢失数据。&lt;/li&gt;
&lt;li&gt;加了笔记检索功能&lt;/li&gt;
&lt;li&gt;为保证代码整洁，加上了 eslint&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;你可以从 &lt;a href=&quot;https://github.com/chenyiqiao/notes-app-vuejs-vuex&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github Repo&lt;/a&gt; 下载源码，和 Firebase 的同步效果看下面这个 gif:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/notes-app/1.gif&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;把数据同步到-Firebase&quot;&gt;&lt;a href=&quot;#把数据同步到-Firebase&quot; class=&quot;headerlink&quot; title=&quot;把数据同步到 Firebase&quot;&gt;&lt;/a&gt;把数据同步到 Firebase&lt;/h2&gt;&lt;p&gt;可能你也知道 Vue.js 和 Firebase 合作搞出了一个 &lt;a href=&quot;https://github.com/vuejs/vuefire&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vuefire&lt;/a&gt;, 但是在这里并不能用它，因为用 Vuex 管理数据的结果就是组件内部只承担基本的View层的职责，而数据基本上都在 store 里面。所以我们只能把数据的存取放在 store 里面。&lt;/p&gt;
&lt;h3 id=&quot;Firebase-概述&quot;&gt;&lt;a href=&quot;#Firebase-概述&quot; class=&quot;headerlink&quot; title=&quot;Firebase 概述&quot;&gt;&lt;/a&gt;Firebase 概述&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;如果熟悉 Firebase 的使用，可以放心地跳过这一段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你还没有 &lt;a href=&quot;https://www.firebase.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Firebase&lt;/a&gt; 的账号，可以去注册一个，注册号之后会自动生成一个”MY FIRST APP”,这个初始应用给的地址就是用来存数据的地方。&lt;/p&gt;
&lt;p&gt;Firebase 存的数据都是 JSON 对象。我们向 JSON 树里面加数据的时候，这条数据就变成了 JSON 树里的一个键。比方说，在&lt;code&gt;/user/mchen&lt;/code&gt;下面加上&lt;code&gt;widgets&lt;/code&gt;属性之后，数据就变成了这个样子：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;users&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;mchen&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;friends&quot;: &amp;#123; &quot;brinchen&quot;: true &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;name&quot;: &quot;Mary Chen&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;widgets&quot;: &amp;#123; &quot;one&quot;: true, &quot;three&quot;: true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;brinchen&quot;: &amp;#123; ... &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;hmadi&quot;: &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建数据引用&quot;&gt;&lt;a href=&quot;#创建数据引用&quot; class=&quot;headerlink&quot; title=&quot;创建数据引用&quot;&gt;&lt;/a&gt;创建数据引用&lt;/h4&gt;&lt;p&gt;要读写数据库里的数据，首先要创建一个指向数据的引用，每个引用对应一条 URL。要获取其子元素，可以用&lt;code&gt;child&lt;/code&gt; API, 也可以直接把子路径加到 URL 上：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// referene&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(https:&lt;span class=&quot;comment&quot;&gt;//docs-examples.firebaseio.com/web/data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 子路径加到 URL 上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(&lt;span class=&quot;string&quot;&gt;&quot;https://docs-examples.firebaseio.com/web/data/users/mchen/name&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// child API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rootRef.child(&lt;span class=&quot;string&quot;&gt;&#39;users/mchen/name&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Firebase-数据库中的数组&quot;&gt;&lt;a href=&quot;#Firebase-数据库中的数组&quot; class=&quot;headerlink&quot; title=&quot;Firebase 数据库中的数组&quot;&gt;&lt;/a&gt;Firebase 数据库中的数组&lt;/h4&gt;&lt;p&gt;Firebase 数据库不能原生支持数组。如果你存了一个数组，实际上是把它存储为一个用数组作为键的对象:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// we send this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;world&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// firebase database store this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;world&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;存储数据&quot;&gt;&lt;a href=&quot;#存储数据&quot; class=&quot;headerlink&quot; title=&quot;存储数据&quot;&gt;&lt;/a&gt;存储数据&lt;/h4&gt;&lt;h5 id=&quot;set&quot;&gt;&lt;a href=&quot;#set&quot; class=&quot;headerlink&quot; title=&quot;set()&quot;&gt;&lt;/a&gt;set()&lt;/h5&gt;&lt;p&gt;&lt;code&gt;set()&lt;/code&gt; 方法把新数据放到指定的引用的路径下，代替那个路径下原有的数据。它可以接收各种数据类型，如果参数是 null 的话就意味着删掉这个路径下的数据。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 新建一个博客的引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ref = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(&lt;span class=&quot;string&quot;&gt;&#39;https://docs-examples.firebaseio.com/web/saving-data/fireblog&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; usersRef = ref.child(&lt;span class=&quot;string&quot;&gt;&#39;users&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usersRef.set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alanisawesome: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  date_of_birth: &lt;span class=&quot;string&quot;&gt;&quot;June 23, 1912&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  full_name: &lt;span class=&quot;string&quot;&gt;&quot;Alan Turing&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gracehop: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    date_of_birth: &lt;span class=&quot;string&quot;&gt;&quot;December 9, 1906&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    full_name: &lt;span class=&quot;string&quot;&gt;&quot;Grace Hopper&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，也可以直接在子路径下存储数据：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;usersRef.child(&lt;span class=&quot;string&quot;&gt;&quot;alanisawesome&quot;&lt;/span&gt;).set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  date_of_birth: &lt;span class=&quot;string&quot;&gt;&quot;June 23, 1912&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  full_name: &lt;span class=&quot;string&quot;&gt;&quot;Alan Turing&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usersRef.child(&lt;span class=&quot;string&quot;&gt;&quot;gracehop&quot;&lt;/span&gt;).set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  date_of_birth: &lt;span class=&quot;string&quot;&gt;&quot;December 9, 1906&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  full_name: &lt;span class=&quot;string&quot;&gt;&quot;Grace Hopper&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不同之处在于，由于分成了两次操作，这种方式会触发两个事件。另外，如果&lt;code&gt;usersRef&lt;/code&gt;下本来有数据的话，那么第一种方式就会覆盖掉之前的数据。&lt;/p&gt;
&lt;h5 id=&quot;update&quot;&gt;&lt;a href=&quot;#update&quot; class=&quot;headerlink&quot; title=&quot;update()&quot;&gt;&lt;/a&gt;update()&lt;/h5&gt;&lt;p&gt;上面的&lt;code&gt;set()&lt;/code&gt;对数据具有”破坏性”，如果我们并不想改动原来的数据的话，可能&lt;code&gt;update()&lt;/code&gt;是更合适的选择：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hopperRef = userRef.child(&lt;span class=&quot;string&quot;&gt;&#39;gracehop&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hopperRef.update(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;nickname&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Amazing Grace&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码会在 Grace 的资料下面加上 nickname 这一项，如果我们用的是&lt;code&gt;set()&lt;/code&gt;的话，那么&lt;code&gt;full_name&lt;/code&gt;和&lt;code&gt;date_of_birth&lt;/code&gt;就会被删掉。&lt;/p&gt;
&lt;p&gt;另外，我们还可以在多个路径下同时做 update 操作：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;usersRef.update(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;alanisawesome/nickname&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Alan The Machine&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;gracehop/nickname&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Amazing Grace&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;push&quot;&gt;&lt;a href=&quot;#push&quot; class=&quot;headerlink&quot; title=&quot;push()&quot;&gt;&lt;/a&gt;push()&lt;/h5&gt;&lt;p&gt;前面已经提到了，由于数组索引不具有独特性，Firebase 不提供对数组的支持，我们因此不得不转而用对象来处理。&lt;/p&gt;
&lt;p&gt;在 Firebase 里面，&lt;code&gt;push&lt;/code&gt;方法会为每一个子元素根据时间戳生成一个唯一的 ID，这样就能保证每个子元素的独特性：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; postsRef = ref.child(&lt;span class=&quot;string&quot;&gt;&#39;posts&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// push 进去的这个元素有了自己的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newPostRef = postsRef.push()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取 ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uniqueID = newPostRef.key()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 为这个元素赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newPostRef.set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  author: &lt;span class=&quot;string&quot;&gt;&#39;gracehop&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title: &lt;span class=&quot;string&quot;&gt;&#39;Announcing COBOL, a New Programming language&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 也可以把这两个动作合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;postsRef.push().set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  author: &lt;span class=&quot;string&quot;&gt;&#39;alanisawesome&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title: &lt;span class=&quot;string&quot;&gt;&#39;The Turing Machine&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后生成的数据就是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;posts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;-JRHTHaIs-jNPLXOQivY&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;author&amp;quot;: &amp;quot;gracehop&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;title&amp;quot;: &amp;quot;Announcing COBOL, a New Programming Language&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;-JRHTHaKuITFIhnj02kE&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;author&amp;quot;: &amp;quot;alanisawesome&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;title&amp;quot;: &amp;quot;The Turing Machine&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://www.firebase.com/blog/2015-02-11-firebase-unique-identifiers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博客&lt;/a&gt;聊到了这个 ID 是怎么回事以及怎么生成的。&lt;/p&gt;
&lt;h4 id=&quot;获取数据&quot;&gt;&lt;a href=&quot;#获取数据&quot; class=&quot;headerlink&quot; title=&quot;获取数据&quot;&gt;&lt;/a&gt;获取数据&lt;/h4&gt;&lt;p&gt;获取 Firebase 数据库里的数据是通过对数据引用添加一个异步的监听器来完成的。在数据初始化和每次数据变化的时候监听器就会触发。&lt;code&gt;value&lt;/code&gt;事件用来读取在此时数据库内容的快照，在初始时触发一次，然后每次变化的时候也会触发：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Get a database reference to our posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ref = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(&lt;span class=&quot;string&quot;&gt;&quot;https://docs-examples.firebaseio.com/web/saving-data/fireblog/posts&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Attach an asynchronous callback to read the data at our posts reference&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ref.on(&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;snapshot&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(snapshot.val());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;errorObject&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;The read failed: &quot;&lt;/span&gt; + errorObject.code);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简单起见，我们只用了 value 事件，其他的事件就不介绍了。&lt;/p&gt;
&lt;h3 id=&quot;Firebase-的数据处理方式对代码的影响&quot;&gt;&lt;a href=&quot;#Firebase-的数据处理方式对代码的影响&quot; class=&quot;headerlink&quot; title=&quot;Firebase 的数据处理方式对代码的影响&quot;&gt;&lt;/a&gt;Firebase 的数据处理方式对代码的影响&lt;/h3&gt;&lt;p&gt;开始写代码之前，我想搞清楚两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firebase 是怎么管理数据的，它对组件的 View 有什么影响&lt;/li&gt;
&lt;li&gt;用户交互过程中是怎么和 Firebase 同步数据的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先看第一个问题，这是我在 Firebase 上保存的 JSON 数据：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;notes&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;-KGXQN4JVdopZO9SWDBw&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;favorite&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;change&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;-KGXQN6oWiXcBe0a54cT&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;favorite&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;-KGZgZBoJJQ-hl1i78aa&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;favorite&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;little&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;-KGZhcfS2RD4W1eKuhAY&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;favorite&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;bit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个乱码一样的东西是 Firebase 为了保证数据的独特性而加上的。我们发现一个问题，在此之前 notes 实际上是一个包含对象的数组：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    favorite: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text: &lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    favorite: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text: &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    favorite: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text: &lt;span class=&quot;string&quot;&gt;&#39;little&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    favorite: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text: &lt;span class=&quot;string&quot;&gt;&#39;bit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显然，对数据的处理方式的变化使得渲染 notes 列表的组件，也就是 NotesList.vue 需要大幅修改。修改的逻辑简单来说就是在思路上要完成从数组到对象的转换。&lt;/p&gt;
&lt;p&gt;举个例子，之前 filteredNotes 是这么写的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;filteredNotes () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.show === &lt;span class=&quot;string&quot;&gt;&#39;all&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.show === &lt;span class=&quot;string&quot;&gt;&#39;favorites&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes.filter(note =&amp;gt; note.favorite)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在的问题就是，notes 不再是一个数组，而是一个对象，而对象是没有 filter 方法的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;filteredNotes () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; favoriteNotes = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.show === &lt;span class=&quot;string&quot;&gt;&#39;all&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.show === &lt;span class=&quot;string&quot;&gt;&#39;favorites&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; note &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes[note][&lt;span class=&quot;string&quot;&gt;&#39;favorite&#39;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        favoriteNotes[note] = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.notes[note]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; favoriteNotes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外由于每个对象都对应一个自己的 ID，所以我也在 state 里面加了一个&lt;code&gt;activeKey&lt;/code&gt;用来表示当前笔记的 ID，实际上现在我们在&lt;code&gt;TOGGLE_FAVORITE&lt;/code&gt;,&lt;code&gt;SET_ACTIVE&lt;/code&gt;这些方法里面都需要对相应的&lt;code&gt;activeKey&lt;/code&gt;赋值。&lt;/p&gt;
&lt;p&gt;再看第二个问题，要怎么和 Firebase 交互：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// store.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; notesRef = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(&lt;span class=&quot;string&quot;&gt;&#39;https://crackling-inferno-296.firebaseio.com/notes&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  notes: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activeNote: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activeKey: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 初始化数据，并且此后数据的变化都会反映到 View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notesRef.on(&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;, snapshot =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  state.notes = snapshot.val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 每一个操作都需要同步到 Firebase&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mutations = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ADD_NOTE (state) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; newNote = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      text: &lt;span class=&quot;string&quot;&gt;&#39;New note&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      favorite: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; addRef = notesRef.push()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state.activeKey = addRef.key()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addRef.set(newNote)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state.activeNote = newNote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  EDIT_NOTE (state, text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notesRef.child(state.activeKey).update(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;: text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  DELETE_NOTE (state) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notesRef.child(state.activeKey).set(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TOGGLE_FAVORITE (state) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state.activeNote.favorite = !state.activeNote.favorite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notesRef.child(state.activeKey).update(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;favorite&#39;&lt;/span&gt;: state.activeNote.favorite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SET_ACTIVE_NOTE (state, key, note) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state.activeNote = note&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state.activeKey = key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;笔记检索功能&quot;&gt;&lt;a href=&quot;#笔记检索功能&quot; class=&quot;headerlink&quot; title=&quot;笔记检索功能&quot;&gt;&lt;/a&gt;笔记检索功能&lt;/h2&gt;&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/notes-app/2.gif&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个功能比较常见，思路就是列表渲染 + 过滤器：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// NoteList.vue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- filter --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-model&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;query&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Filter your notes...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- render notes in a list --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;note in filteredNotes | byTitle query&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;:class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;active: activeKey === $key&amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      @&lt;span class=&quot;attr&quot;&gt;click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;updateActiveNote($key, note)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item-heading&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123;note.text.substring(0, 30)&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// NoteList.vue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filters: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  byTitle (notesToFilter, filterValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; filteredNotes = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; note &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; notesToFilter) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (notesToFilter[note][&lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;].indexOf(filterValue) &amp;gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filteredNotes[note] = notesToFilter[note]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; filteredNotes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;在项目中用-eslint&quot;&gt;&lt;a href=&quot;#在项目中用-eslint&quot; class=&quot;headerlink&quot; title=&quot;在项目中用 eslint&quot;&gt;&lt;/a&gt;在项目中用 eslint&lt;/h2&gt;&lt;p&gt;如果你是个 Vue 重度用户，你应该已经用上 eslint-standard 了吧。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint&amp;quot;: &amp;quot;^2.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-config-standard&amp;quot;: &amp;quot;^5.1.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-friendly-formatter&amp;quot;: &amp;quot;^1.2.2&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-loader&amp;quot;: &amp;quot;^1.3.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-plugin-html&amp;quot;: &amp;quot;^1.3.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-plugin-promise&amp;quot;: &amp;quot;^1.0.8&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;eslint-plugin-standard&amp;quot;: &amp;quot;^1.3.2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把以上各条添加到 devDependencies 里面。如果用了 vue-cli 的话, 那就不需要手动配置 eslint 了。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// webpack.config.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  preLoaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.vue$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;eslint&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      test: &lt;span class=&quot;regexp&quot;&gt;/\.js$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loader: &lt;span class=&quot;string&quot;&gt;&#39;eslint&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  loaders: [ ... ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  eslint: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    formatter: &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;eslint-friendly-formatter&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要自定义规则的话，就在根目录下新建&lt;code&gt;.eslintrc&lt;/code&gt;，这是我的配置:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  root: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// https://github.com/feross/standard/blob/master/RULES.md#javascript-standard-style&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  extends: &lt;span class=&quot;string&quot;&gt;&#39;standard&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// required to lint *.vue files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;html&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// add your custom rules here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;rules&#39;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// allow paren-less arrow functions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;arrow-parens&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;no-undef&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;one-var&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// allow debugger during development&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;no-debugger&#39;&lt;/span&gt;: process.env.NODE_ENV === &lt;span class=&quot;string&quot;&gt;&#39;production&#39;&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前几天翻译了基于&lt;a href=&quot;https://coligo.io/learn-vuex-by-building-notes-app/&quot;&gt;这篇博客&lt;/a&gt;的文章：&lt;a href=&quot;https://segmentfault.com/a/1190000005015164&quot;&gt;用 Vuex 构建一个笔记应用&lt;/a&gt;。在此基础上我对它做了一些更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把数据同步到 Firebase 上，不会每次关掉浏览器就丢失数据。&lt;/li&gt;
&lt;li&gt;加了笔记检索功能&lt;/li&gt;
&lt;li&gt;为保证代码整洁，加上了 eslint&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Vue.js" scheme="http://yoursite.com/tags/Vue-js/"/>
    
  </entry>
  
</feed>
